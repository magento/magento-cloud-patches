diff -Nuar a/dev/tests/integration/testsuite/Magento/Developer/Model/Logger/Handler/DebugTest.php b/dev/tests/integration/testsuite/Magento/Developer/Model/Logger/Handler/DebugTest.php
--- a/dev/tests/integration/testsuite/Magento/Developer/Model/Logger/Handler/DebugTest.php
+++ b/dev/tests/integration/testsuite/Magento/Developer/Model/Logger/Handler/DebugTest.php
@@ -139,7 +139,7 @@ public function testDebugInDeveloperMode()
     {
         $message = 'test message';
         $this->reinitDebugHandler(State::MODE_DEVELOPER);
-
+        $this->deploymentConfig->resetData();
         $this->removeDebugLog();
         $this->logger->debug($message);
         $this->assertFileExists($this->getDebuggerLogPath());
diff -Nuar a/lib/internal/Magento/Framework/App/DeploymentConfig.php b/lib/internal/Magento/Framework/App/DeploymentConfig.php
--- a/lib/internal/Magento/Framework/App/DeploymentConfig.php
+++ b/lib/internal/Magento/Framework/App/DeploymentConfig.php
@@ -86,7 +86,6 @@ public function get($key = null, $defaultValue = null)
      */
     public function isAvailable()
     {
-        $this->data = null;
         $this->load();
         return isset($this->flatData[ConfigOptionsListConstants::CONFIG_PATH_INSTALL_DATE]);
     }
@@ -141,7 +140,7 @@ public function isDbAvailable()
      */
     private function load()
     {
-        if (null === $this->data) {
+        if (empty($this->data)) {
             $this->data = $this->reader->load();
             if ($this->overrideData) {
                 $this->data = array_replace($this->data, $this->overrideData);
@@ -173,10 +172,12 @@ private function flattenParams(array $params, $path = null)
                 $newPath = $key;
             }
             if (isset($cache[$newPath])) {
+                //phpcs:ignore Magento2.Exceptions.DirectThrow
                 throw new \Exception("Key collision {$newPath} is already defined.");
             }
             $cache[$newPath] = $param;
             if (is_array($param)) {
+                //phpcs:ignore Magento2.Performance.ForeachArrayMerge
                 $cache = array_merge($cache, $this->flattenParams($param, $newPath));
             }
         }
diff -Nuar a/lib/internal/Magento/Framework/Locale/Resolver.php b/lib/internal/Magento/Framework/Locale/Resolver.php
--- a/lib/internal/Magento/Framework/Locale/Resolver.php
+++ b/lib/internal/Magento/Framework/Locale/Resolver.php
@@ -15,7 +15,7 @@
 class Resolver implements ResolverInterface
 {
     /**
-     * Default locale
+     * Resolver default locale
      */
     const DEFAULT_LOCALE = 'en_US';

@@ -79,7 +79,7 @@ public function __construct(
         $this->scopeConfig = $scopeConfig;
         $this->defaultLocalePath = $defaultLocalePath;
         $this->scopeType = $scopeType;
-        $this->deploymentConfig = $deploymentConfig ?: ObjectManager::getInstance()->create(DeploymentConfig::class);
+        $this->deploymentConfig = $deploymentConfig ?: ObjectManager::getInstance()->get(DeploymentConfig::class);
         $this->setLocale($locale);
     }

diff -Nuar a/lib/internal/Magento/Framework/Module/ModuleList.php b/lib/internal/Magento/Framework/Module/ModuleList.php
--- a/lib/internal/Magento/Framework/Module/ModuleList.php
+++ b/lib/internal/Magento/Framework/Module/ModuleList.php
@@ -59,7 +59,7 @@ public function __construct(DeploymentConfig $config, ModuleList\Loader $loader)
     }

     /**
-     * {@inheritdoc}
+     * @inheritdoc
      *
      * Note that this triggers loading definitions of all existing modules in the system.
      * Use this method only when you actually need modules' declared meta-information.
@@ -84,7 +84,8 @@ public function getAll()
     }

     /**
-     * {@inheritdoc}
+     * @inheritdoc
+     *
      * @see has()
      */
     public function getOne($name)
@@ -94,7 +95,7 @@ public function getOne($name)
     }

     /**
-     * {@inheritdoc}
+     * @inheritdoc
      */
     public function getNames()
     {
@@ -107,7 +108,7 @@ public function getNames()
     }

     /**
-     * {@inheritdoc}
+     * @inheritdoc
      */
     public function has($name)
     {
@@ -139,7 +140,6 @@ public function isModuleInfoAvailable()
      */
     private function loadConfigData()
     {
-        $this->config->resetData();
         if (null === $this->configData && null !== $this->config->get(ConfigOptionsListConstants::KEY_MODULES)) {
             $this->configData = $this->config->get(ConfigOptionsListConstants::KEY_MODULES);
         }
diff -Nuar a/lib/internal/Magento/Framework/Module/Test/Unit/ModuleListTest.php b/lib/internal/Magento/Framework/Module/Test/Unit/ModuleListTest.php
--- a/lib/internal/Magento/Framework/Module/Test/Unit/ModuleListTest.php
+++ b/lib/internal/Magento/Framework/Module/Test/Unit/ModuleListTest.php
@@ -47,7 +47,6 @@ protected function setUp()

     public function testGetAll()
     {
-        $this->config->expects($this->exactly(2))->method('resetData');
         $this->setLoadAllExpectation();
         $this->setLoadConfigExpectation();
         $expected = ['foo' => self::$allFixture['foo']];
@@ -65,7 +64,6 @@ public function testGetAllNoData()

     public function testGetOne()
     {
-        $this->config->expects($this->exactly(2))->method('resetData');
         $this->setLoadAllExpectation();
         $this->setLoadConfigExpectation();
         $this->assertSame(['key' => 'value'], $this->model->getOne('foo'));
@@ -74,7 +72,6 @@ public function testGetOne()

     public function testGetNames()
     {
-        $this->config->expects($this->exactly(2))->method('resetData');
         $this->setLoadAllExpectation(false);
         $this->setLoadConfigExpectation();
         $this->assertSame(['foo'], $this->model->getNames());
@@ -83,7 +80,6 @@ public function testGetNames()

     public function testHas()
     {
-        $this->config->expects($this->exactly(2))->method('resetData');
         $this->setLoadAllExpectation(false);
         $this->setLoadConfigExpectation();
         $this->assertTrue($this->model->has('foo'));
@@ -92,7 +88,6 @@ public function testHas()

     public function testIsModuleInfoAvailable()
     {
-        $this->config->expects($this->once())->method('resetData');
         $this->setLoadConfigExpectation(true);
         $this->assertTrue($this->model->isModuleInfoAvailable());
     }
